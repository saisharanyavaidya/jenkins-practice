pipeline {
    agent {
        label 'AGENT-1' //Node
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds() // to not allow multiple persons to build at a time
    }
    // these will be available in console and we need to provide values before build--> you need to do build with parameters in Jenkins
    parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    // these act as environment or global variables
    environment {
        DEPLOY_TO = 'Production'
        GREETING = 'Good Morning'
    }
    //pipeline stages
    stages {
        stage('Build') {
            steps {
                sh 'echo This is Build'
                sh 'env' // printing all environment variables declared above
            }
        }
        stage('Test') {
            steps {
                sh 'echo This is Test'
                sh 'sleep 10'
            }
        }
        stage('Deploy') {
            steps {
                sh 'echo This is Deploy'
            }
        }
        stage('Print Parameters') {
            steps {
                echo "Hello ${params.PERSON}"
                echo "Biography: ${params.BIOGRAPHY}"
                echo "Toggle: ${params.TOGGLE}"
                echo "Choice: ${params.CHOICE}"
                echo "Password: ${params.PASSWORD}"
                echo "triggeres testing again"
                error 'some failure -- this will print failure block in post section'
            }
        }
    }
    // post section will run after build completion and after all the stages are executed
    post {
        always {
            echo "I will always run even when pipeline is success or failure"
        }
        success {
            echo "I will run when pipeline is success"
        }
        failure {
            echo "I will run when pipeline is failure"
        }
    }
}